name: TSMP_Backend_API_Pipeline
#backend pipeline
on:
  push:
    branches:
      - ci/pipeline
      - prod
    paths:
      - tool-sharing/**
      - docker/backend/**
      - 'docker-compose.yml'
      - .github/workflows/*-backend.yml

jobs:
  compile:
    runs-on: ubuntu-latest
    name: Compile project
    steps:
      - name: Checkout_code # root-level
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-jdk@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Compile Project
        run: |
          cd tool-sharing
          ./mvnw clean compile
          

  unit-tests:
    runs-on: ubuntu-latest
    name: Unit tests
    steps:
      - name: Checkout_code # root-level
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-jdk@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Running unit Tests
        run: |
          cd tool-sharing
          ./mvnw clean test
          

  building-backend:
    runs-on: ubuntu-latest
    name: Build backend
    needs: [compile, unit-tests]
    steps:
      - name: Checkout_code # root-level
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-jdk@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Build backend
        run: |
          cd tool-sharing
          ./mvnw clean package
  

  building-docker-image:
    runs-on: ubuntu-latest
    name: Build backend
    needs: [building-backend]
    steps:
      - name: Checkout_code # root-level
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-jdk@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Extract project version
        id: extract_version
        run: |
          cd tool-sharing
          echo "VERSION=$(../mvnw -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push to DockerHub
        uses: docker/build-push-action@v5 #building the image
        with:
          context: tool-sharing #like the context in the Dockerfile
          file: docker/backend/Dockerfile
          push: true #push to DockerHub
          platforms: linux/amd64 #runs-on ubuntu
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tsmp-api:${{ steps.extract_version.outputs.VERSION }},${{ secrets.DOCKERHUB_USERNAME }}/tsmp-api:latest
          build-args: |
            PROFILE=staging
            APP_VERSION=${{ steps.extract_version.outputs.VERSION }}
    
    

    #  DEPLOYMENT TO CLOUD PLATFORM, REMOTE SERVER (VPS)
    #  deploy:
    #    name: Deploy Backend
    #    runs-on: ubuntu
    #    needs: [building-docker-image]
    #    steps:
    #      ...